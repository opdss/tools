{% extends "layout.twig" %}

{% block container %}
    <h3 class="page-header">js代码格式化</h3>
    <p>
        待处理的JS代码：
        {{ Bootstrap.iconBtn('copy', {'data-obj':'#origin_textarea'})|raw }}
        {{ Bootstrap.iconBtn('remove', {'data-obj':'#origin_textarea'})|raw }}
    </p>
    <p>{{ Bootstrap.textarea('origin_textarea', 10, test)|raw }}</p>
    <p class="text-center">
        <select class="selectpicker" id="tabsize">
            <option value="1">Tab符缩进</option>
            <option value="2">2个空格缩进</option>
            <option value="4" selected="selected">4个空格缩进</option>
            <option value="8">8个空格缩进</option>
        </select>
        {{ Bootstrap.button({'id':'beautiful-btn', 'data-obj':'#origin_textarea|#result_textarea'}, 'JS格式化&美化')|raw }}
        {{ Bootstrap.button({'id':'compress-btn', 'data-obj':'#origin_textarea|#result_textarea'}, '压缩JS')|raw }}
    </p>
    <p>
        处理结果：
        {{ Bootstrap.iconBtn('copy', {'data-obj':'#result_textarea'})|raw }}
    </p>
    <pre class="well code-break" id="result_textarea"></pre>
{% endblock %}

{% block script %}
    <script>
        $('#beautiful-btn').click(function () {
            var obj = $(this).data('obj');
            var arr = obj.split('|');
            var tabsize = parseInt($('#tabsize').val());
            $(arr[1]).text(js_beautify($(arr[0]).val(), {
                "indent_size" : tabsize,
                "indent_char" : tabsize == 1 ? '\t' : ' ',
                "space_after_anon_function": false, // Should the space before an anonymous function's parens be added, "function()" vs "function ()"
                "space_before_conditional": true, // Should the space before conditional statement be added, "if(true)" vs "if (true)"
                "space_in_empty_paren": true, // Add padding spaces within empty paren, "f()" vs "f( )"
                "space_in_paren": false, // Add padding spaces within paren, ie. f( a, b )
                "unescape_strings": false, // Should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"
                "wrap_line_length": 0 // Lines should wrap at next opportunity after this number of characters (0 disables)
            }));
        });

        $('#compress-btn').click(function () {
            var obj = $(this).data('obj');
            var arr = obj.split('|');
            var val = $(arr[0]).val();
            if (val.length == 0) {
                swal('请输入要处理得数据!');
                return;
            }
            $.post(
                '/api/format',
                {'type':'js', 'action':'compress', 'data':val},
                function (res) {
                    if (res.errCode == 0) {
                        $(arr[1]).text(res.data.result);
                    }else {
                        swal(res.errMsg);
                    }
                },
                'json'
            );
        });
    </script>
{% endblock %}